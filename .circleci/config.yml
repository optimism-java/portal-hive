version: 2.1
orbs:
  go: circleci/go@1.5.0

jobs:
  # This job builds the hive executable and stores it in the workspace.
  build:
    docker:
      - image: cimg/go:1.17
    steps:
      # Build it.
      - checkout
      - go/load-cache
      - go/mod-download
      - go/save-cache
      - run: {command: "go build ."}
      # Store the executable.
      - persist_to_workspace:
          root: .
          paths: ["hive"]

  # This job runs the go unit tests.
  go-test:
    docker:
      - image: cimg/go:1.17
    steps:
      # Get the source.
      - checkout
      - go/load-cache
      - go/mod-download
      - go/save-cache
      # Run the tests.
      - run:
          name: "hive module tests"
          command: "go test -cover ./..."
      - run:
          name: "hiveproxy module tests"
          command: "go test -cover ./..."
          working_directory: "./hiveproxy"
      - run:
          name: "Compile Go simulators"
          command: ".circleci/compile-simulators.sh"
  hivesim-rs:
      docker:
        - image: cimg/rust:1.75.0
      steps:
        - checkout
        - run:
            name: Install rustfmt
            command: rustup component add rustfmt
        - run:
            name: Install Clippy
            command: rustup component add clippy
        - run:
            name: Install Clang
            command: sudo apt update && sudo apt-get install clang -y
        - run:
            name: "Lint"
            command: "cd hivesim-rs && cargo fmt --all -- --check"
        - run:
            name: "Build"
            command: "cd hivesim-rs && cargo clippy --all --all-targets --all-features --no-deps -- --deny warnings"
        - run:
            name: "Test hivesim-rs"
            command: "cd hivesim-rs && cargo test --workspace -- --nocapture"            

workflows:
  main:
    jobs:
      - go-test
      - build
      - hivesim-rs
